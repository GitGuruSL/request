name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/request-backend:latest
            ghcr.io/${{ github.repository_owner }}/request-backend:${{ github.sha }}

  deploy:
    name: Deploy to Server (SSH)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Connect and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            echo "[Deploy] Logging into GHCR"
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

            echo "[Deploy] Create app directory"
            sudo mkdir -p /opt/request-backend
            sudo chown $USER:$USER /opt/request-backend

            echo "[Deploy] Pull latest image"
            docker pull ghcr.io/${{ github.repository_owner }}/request-backend:latest

            echo "[Deploy] Stop old container if exists"
            if [ "$(docker ps -aq -f name=request-backend)" ]; then
              docker rm -f request-backend || true
            fi

            echo "[Deploy] Start container"
            docker run -d \
              --name request-backend \
              --restart unless-stopped \
              --env-file /opt/request-backend/production.env \
              -p 3001:3001 \
              ghcr.io/${{ github.repository_owner }}/request-backend:latest

            echo "[Deploy] Prune old images"
            docker image prune -f
