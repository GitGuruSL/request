name: Backend Deploy (Staging)

on:
  # Disabled automatic triggers; use backend-redeploy.yml for staging too
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Image (Staging)
    runs-on: ubuntu-latest
    concurrency:
      group: backend-build-staging-${{ github.ref }}
      cancel-in-progress: false
    env:
      GHCR_USER: ${{ secrets.GHCR_USER }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare lowercase owner
        id: vars
        run: echo "owner_lower=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Log in to GHCR
        if: ${{ env.GHCR_USER != '' && env.GHCR_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ env.GHCR_TOKEN }}
      - name: Log in to GHCR (fallback to GITHUB_TOKEN)
        if: ${{ env.GHCR_USER == '' || env.GHCR_TOKEN == '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner_lower }}/request-backend:staging
            ghcr.io/${{ steps.vars.outputs.owner_lower }}/request-backend:${{ github.sha }}-stg

  deploy:
    name: Deploy to Staging Server (SSH)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/develop' }}
    environment: staging
    concurrency:
      group: backend-deploy-staging
      cancel-in-progress: true
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          host: ${{ secrets.STAGING_DEPLOY_HOST }}
          username: ${{ secrets.STAGING_DEPLOY_USER }}
          key: ${{ secrets.STAGING_DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            REPO_OWNER="${{ github.repository_owner }}"
            IMAGE_OWNER="$(echo "$REPO_OWNER" | tr '[:upper:]' '[:lower:]')"
            IMAGE_BASE="ghcr.io/${IMAGE_OWNER}/request-backend"
            IMAGE="$IMAGE_BASE:${{ github.sha }}-stg"
            echo "[Deploy] Using server's redeploy.sh"
            if [ ! -f /opt/request-backend/redeploy.sh ]; then
              echo "redeploy.sh not found at /opt/request-backend/redeploy.sh" >&2
              exit 1
            fi
            bash /opt/request-backend/redeploy.sh "$IMAGE"