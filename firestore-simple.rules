rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserId() {
      return request.auth.uid;
    }
    
    // ========================================
    // USERS COLLECTION - SIMPLIFIED RULES
    // ========================================
    
    match /users/{userId} {
      // Allow read access to any authenticated user
      allow read: if isAuthenticated();
      
      // Allow creation during registration
      allow create: if isAuthenticated() && getUserId() == userId;
      
      // Allow updates to own profile
      allow update: if isAuthenticated() && getUserId() == userId;
      
      // Allow deletion of own account
      allow delete: if isAuthenticated() && getUserId() == userId;
    }
    
    // ========================================
    // COUNTRIES COLLECTION
    // ========================================
    
    match /countries/{document} {
      allow read: if true; // Public read access for country list
      allow write: if false; // No write access from client
    }
    
    // ========================================
    // REQUESTS COLLECTION
    // ========================================
    
    match /requests/{requestId} {
      // Allow read access to authenticated users
      allow read: if isAuthenticated();
      
      // Allow creation by authenticated users
      allow create: if isAuthenticated() && getUserId() == resource.data.requesterId;
      
      // Allow updates by requester or responders
      allow update: if isAuthenticated() && 
                   (getUserId() == resource.data.requesterId || 
                    getUserId() in resource.data.responses.map((r) => r.responderId));
      
      // Allow deletion by requester only
      allow delete: if isAuthenticated() && getUserId() == resource.data.requesterId;
    }
    
    // ========================================
    // PRODUCTS COLLECTION
    // ========================================
    
    match /products/{productId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow creation by business users
      allow create: if isAuthenticated();
      
      // Allow updates by product owner
      allow update: if isAuthenticated() && getUserId() == resource.data.businessId;
      
      // Allow deletion by product owner
      allow delete: if isAuthenticated() && getUserId() == resource.data.businessId;
    }
    
    // ========================================
    // TRANSACTIONS COLLECTION
    // ========================================
    
    match /transactions/{transactionId} {
      // Allow read access to involved parties
      allow read: if isAuthenticated() && 
                 (getUserId() == resource.data.payerId || 
                  getUserId() == resource.data.payeeId);
      
      // Allow creation by payer
      allow create: if isAuthenticated() && getUserId() == resource.data.payerId;
      
      // Allow updates by involved parties (for status changes)
      allow update: if isAuthenticated() && 
                   (getUserId() == resource.data.payerId || 
                    getUserId() == resource.data.payeeId);
    }
    
    // ========================================
    // REVIEWS COLLECTION
    // ========================================
    
    match /reviews/{reviewId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow creation by authenticated users
      allow create: if isAuthenticated() && getUserId() == resource.data.reviewerId;
      
      // Allow updates by reviewer only
      allow update: if isAuthenticated() && getUserId() == resource.data.reviewerId;
      
      // Allow deletion by reviewer only
      allow delete: if isAuthenticated() && getUserId() == resource.data.reviewerId;
    }
    
    // ========================================
    // TEST COLLECTION FOR DEBUGGING
    // ========================================
    
    match /test/{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // ========================================
    // ADMIN COLLECTIONS (if needed)
    // ========================================
    
    match /admin/{document=**} {
      allow read, write: if false; // No client access to admin data
    }
  }
}
