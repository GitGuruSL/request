flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub get
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  For background_image, use the path to a png image.
  # If a background_image is specified, color is not used.  Optional parameters include image,
  # color_dark, background_image_dark, image_dark, branding (Android), info_plist_files (iOS),
  # and android_gravity.

  # color: "#FFFFFF"
  background_image: "assets/images/app_logo.png"
  
  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing 
  # the leading # character.

  # The image parameter allows you to specify an image used as the splash screen.  It must be a 
  # png file and should be sized for 4x pixel density.
  image: assets/images/app_logo.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # branding: assets/images/app_logo.png

  # To position the branding image at the bottom of the screen you can use bottom, center, 
  # and top. The default is bottom if not specified or specified something else.
  branding_mode: bottom

  # The color_dark, background_image_dark, and image_dark parameters are used when the device is
  # in dark mode. If they are not specified, the app will use the parameters from above.
  color_dark: "#FFFFFF"
  image_dark: assets/images/app_logo.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a 
  # given platform.
  android: true
  ios: true
  web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #android_gravity: center
  #android_12: true
  #fullscreen: true
  
  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web 
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s) 
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
